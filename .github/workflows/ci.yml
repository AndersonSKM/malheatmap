name: ci
on:
  - push

jobs:
  qa:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:12.1-alpine
        ports: ["5432:5432"]

    env:
      BUNDLE_JOBS: 4
      BUNDLE_RETRY: 3
      BUNDLE_PATH: vendor/bundle

    steps:
    - name: Increase max fs watches
      run: echo fs.inotify.max_user_watches=524288 | sudo tee -a /etc/sysctl.conf && sudo sysctl -p

    - name: Checkout code
      uses: actions/checkout@v1

    - name: Setup Ruby
      uses: ruby/setup-ruby@v1

    - name: Setup Node
      uses: actions/setup-node@v1
      with:
        node-version: '10.x'

    - name: Cache Ruby Dependencies
      uses: actions/cache@v1
      with:
        path: vendor/bundle
        key: ${{ runner.os }}-gem-${{ hashFiles('Gemfile.lock') }}
        restore-keys: |
          ${{ runner.os }}-gem-

    - name: Cache Node Dependencies
      uses: actions/cache@v1
      with:
        path: node_modules
        key: ${{ runner.os }}-node_modules-${{ hashFiles('yarn.lock') }}
        restore-keys: |
          ${{ runner.os }}-node_modules-

    - name: Setup
      run: bin/setup

    - name: Run linters
      env:
        REVIEWDOG_GITHUB_API_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        mkdir -p $HOME/bin/ && export PATH="$HOME/bin/:$PATH"
        curl -sfL https://raw.githubusercontent.com/reviewdog/reviewdog/master/install.sh | sh -s -- -b $HOME/bin
        reviewdog -reporter=github-check -tee

    - name: Test assets compilation
      run: RAILS_ENV=test bin/rails assets:precompile

    - name: Run unit tests
      run: bin/rails test

    - name: Run E2E tests
      run: bin/rails test:system

    - name: Upload failed tests screenshots
      uses: actions/upload-artifact@v1
      if: failure()
      with:
        name: system-tests-screenshots
        path: tmp/screenshots

    - name: Upload Rails logs
      uses: actions/upload-artifact@v1
      if: failure()
      with:
        name: logs
        path: log
  deploy:
    needs: qa
    if: ${{ github.ref == 'refs/heads/master' }}
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - id: deploy
      name: Deploy to dokku
      uses: idoberko2/dokku-deploy-github-action@v1
      with:
        ssh-private-key: ${{ secrets.DOKKU_SSH_KEY }}
        dokku-host:  ${{ secrets.DOKKU_HOST }}
        app-name: 'malheatmap'

# Name of your application. Used to uniquely configure containers.
service: malheatmap

# Name of the container image.
image: andersonskm/malheatmap

# Deploy to these servers.
servers:
  web:
    hosts:
      - 213.199.60.22
    cmd: sh -c "crond -b && bin/rails server"
    options:
      network: "private"
      cpus: 2
      memory: 4128m

volumes:
  - "/storage/malheatmap:/rails/storage"

# Credentials for your image host.
registry:
  username: andersonskm
  password:
    - KAMAL_REGISTRY_PASSWORD

# Only builds for linux based hosts, skip arm
builder:
  local:
    arch: amd64

# Inject ENV variables into containers (secrets come from .env).
# Remember to run `kamal env push` after making changes!
env:
  clear:
    PUMA_MAX_TREADS: 2
    REDIS_URL: "redis://malheatmap-redis:6379/0"
  secret:
    - RAILS_MASTER_KEY

traefik:
  options:
    publish:
      - "443:443"
    network: "private"

accessories:
  redis:
    roles:
      - web
    image: redis/redis-stack:latest
    port: 6379:6379
    options:
      memory: 512m
      network: "private"
    env:
      clear:
        REDIS_ARGS: "--save 60 1000 --appendonly yes"
    volumes:
      - /storage/malheatmap:/data

# Use a different ssh user than root
ssh:
  user: contabo
  port: 2025

# Use accessory services (secrets come from .env).
#accessories:
#  redis:
#    roles:
#      - web
#      - jobs
#    image: redis:7.2.4-alpine
#    port: 6379:6379
#    options:
#      memory: 2048m
#      network: "private"
#    volumes:
#      - /var/lib/redis:/data

# Configure a custom healthcheck (default is /up on port 3000)
# healthcheck:
#   path: /healthz
#   port: 4000

# Bridge fingerprinted assets, like JS and CSS, between versions to avoid
# hitting 404 on in-flight requests. Combines all files from new and old
# version inside the asset_path.
#asset_path: /rails/public/assets

# Configure rolling deploys by setting a wait time between batches of restarts.
# boot:
#   limit: 10 # Can also specify as a percentage of total hosts, such as "25%"
#   wait: 2

# Configure the role used to determine the primary_host. This host takes
# deploy locks, runs health checks during the deploy, and follow logs, etc.
#
# Caution: there's no support for role renaming yet, so be careful to cleanup
#          the previous role on the deployed hosts.
# primary_role: web

# Controls if we abort when see a role with no hosts. Disabling this may be
# useful for more complex deploy configurations.
#
# allow_empty_roles: false
